//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:2.0.50727.42
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using JPB.DataAccess.AdoWrapper;
using JPB.DataAccess;
using JPB.DataAccess.ModelsAnotations;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using JPB.DataAccess.DbInfoConfig;
using JPB.DataAccess.EntityCollections;

namespace JPB.InhousePlayback.Server.Services.Database.Models
{


	[GeneratedCodeAttribute(tool: "JPB.DataAccess.EntityCreator.MsSql.MsSqlCreator", version: "2.0.0.0")]
	public partial class Genre
	{
		public Genre() {}
		public int GenreId  { get; set; }
		public string Name  { get; set; }
		public string Location  { get; set; }
		public Nullable<Int32> PlaybackLength  { get; set; }
		public Nullable<Int32> OffsetStart  { get; set; }
		public Nullable<Int32> OffsetEnd  { get; set; }
		public virtual DbCollection<Season> Season  { get; set; }
		public static Genre Factory(EagarDataRecord reader)
		{
			var super = new Genre();
			super.GenreId = (int)reader["GenreId"];
			super.Name = (string)reader["Name"];
			super.Location = (string)reader["Location"];
			super.PlaybackLength = (Nullable<Int32>)reader["PlaybackLength"];
			super.OffsetStart = (Nullable<Int32>)reader["OffsetStart"];
			super.OffsetEnd = (Nullable<Int32>)reader["OffsetEnd"];
			var readersOfSeason = ((EagarDataRecord[])reader["Season"]);
			super.Season = readersOfSeason == null ? null : new DbCollection<Season>(readersOfSeason.Select(item => ((Season)(typeof(Season).GetClassInfo().SetPropertiesViaReflection(reader: item)))));
			return super;
		}
		static partial void BeforeConfig();
		static partial void AfterConfig();
		static partial void BeforeConfig(ConfigurationResolver<Genre> config);
		static partial void AfterConfig(ConfigurationResolver<Genre> config);
		[ConfigMehtodAttribute]
		public static void Configuration(ConfigurationResolver<Genre> config)
		{
			BeforeConfig();
			BeforeConfig(config);
			config.SetPropertyAttribute(s => s.GenreId, new PrimaryKeyAttribute());
			config.SetPropertyAttribute(s => s.Season, new ForeignKeyAttribute(referenceKey: "IdGenre", foreignKey: "GenreId"));
			AfterConfig(config);
			AfterConfig();
		}
	}
}
