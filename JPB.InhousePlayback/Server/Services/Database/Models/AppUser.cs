//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:2.0.50727.42
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using JPB.DataAccess.AdoWrapper;
using JPB.DataAccess;
using JPB.DataAccess.ModelsAnotations;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using JPB.DataAccess.DbInfoConfig;
using JPB.DataAccess.EntityCollections;

namespace JPB.InhousePlayback.Server.Services.Database.Models
{


	[GeneratedCodeAttribute(tool: "JPB.DataAccess.EntityCreator.MsSql.MsSqlCreator", version: "2.0.0.0")]
	public partial class AppUser
	{
		public AppUser() {}
		public int AppUserId  { get; set; }
		public string Username  { get; set; }
		public string NormUsername  { get; set; }
		public string Password  { get; set; }
		public int IdRole  { get; set; }
		public virtual AppRole AppRole  { get; set; }
		public virtual DbCollection<Users> Users  { get; set; }
		public static AppUser Factory(EagarDataRecord reader)
		{
			var super = new AppUser();
			super.AppUserId = (int)reader["AppUserId"];
			super.Username = (string)reader["Username"];
			super.NormUsername = (string)reader["NormUsername"];
			super.Password = (string)reader["Password"];
			super.IdRole = (int)reader["IdRole"];
			var readersOfAppRole = ((EagarDataRecord[])reader["AppRole"])?.FirstOrDefault();
			super.AppRole = readersOfAppRole == null ? null : ((AppRole)(typeof(AppRole).GetClassInfo().SetPropertiesViaReflection(reader: readersOfAppRole)));
			var readersOfUsers = ((EagarDataRecord[])reader["Users"]);
			super.Users = readersOfUsers == null ? null : new DbCollection<Users>(readersOfUsers.Select(item => ((Users)(typeof(Users).GetClassInfo().SetPropertiesViaReflection(reader: item)))));
			return super;
		}
		static partial void BeforeConfig();
		static partial void AfterConfig();
		static partial void BeforeConfig(ConfigurationResolver<AppUser> config);
		static partial void AfterConfig(ConfigurationResolver<AppUser> config);
		[ConfigMehtodAttribute]
		public static void Configuration(ConfigurationResolver<AppUser> config)
		{
			BeforeConfig();
			BeforeConfig(config);
			config.SetPropertyAttribute(s => s.AppUserId, new PrimaryKeyAttribute());
			config.SetPropertyAttribute(s => s.IdRole, new ForeignKeyDeclarationAttribute(foreignKey: "AppRoleId", foreignTable: typeof(AppRole)));
			config.SetPropertyAttribute(s => s.AppRole, new ForeignKeyAttribute(foreignKey: "IdRole", referenceKey: "AppRoleId"));
			config.SetPropertyAttribute(s => s.Users, new ForeignKeyAttribute(referenceKey: "IdAccount", foreignKey: "AppUserId"));
			AfterConfig(config);
			AfterConfig();
		}
	}
}
