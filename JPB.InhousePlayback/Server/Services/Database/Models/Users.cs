//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:2.0.50727.42
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using JPB.DataAccess.AdoWrapper;
using JPB.DataAccess;
using JPB.DataAccess.ModelsAnotations;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using JPB.DataAccess.DbInfoConfig;
using JPB.DataAccess.EntityCollections;

namespace JPB.InhousePlayback.Server.Services.Database.Models
{


	[GeneratedCodeAttribute(tool: "JPB.DataAccess.EntityCreator.MsSql.MsSqlCreator", version: "2.0.0.0")]
	public partial class Users
	{
		public Users() {}
		public int UserId  { get; set; }
		public string Username  { get; set; }
		public Nullable<Int32> IdAccount  { get; set; }
		public virtual AppUser AppUser  { get; set; }
		public virtual DbCollection<Playback> Playback  { get; set; }
		public static Users Factory(EagarDataRecord reader)
		{
			var super = new Users();
			super.UserId = (int)reader["UserId"];
			super.Username = (string)reader["Username"];
			super.IdAccount = (Nullable<Int32>)reader["IdAccount"];
			var readersOfAppUser = ((EagarDataRecord[])reader["AppUser"])?.FirstOrDefault();
			super.AppUser = readersOfAppUser == null ? null : ((AppUser)(typeof(AppUser).GetClassInfo().SetPropertiesViaReflection(reader: readersOfAppUser)));
			var readersOfPlayback = ((EagarDataRecord[])reader["Playback"]);
			super.Playback = readersOfPlayback == null ? null : new DbCollection<Playback>(readersOfPlayback.Select(item => ((Playback)(typeof(Playback).GetClassInfo().SetPropertiesViaReflection(reader: item)))));
			return super;
		}
		static partial void BeforeConfig();
		static partial void AfterConfig();
		static partial void BeforeConfig(ConfigurationResolver<Users> config);
		static partial void AfterConfig(ConfigurationResolver<Users> config);
		[ConfigMehtodAttribute]
		public static void Configuration(ConfigurationResolver<Users> config)
		{
			BeforeConfig();
			BeforeConfig(config);
			config.SetPropertyAttribute(s => s.UserId, new PrimaryKeyAttribute());
			config.SetPropertyAttribute(s => s.IdAccount, new ForeignKeyDeclarationAttribute(foreignKey: "AppUserId", foreignTable: typeof(AppUser)));
			config.SetPropertyAttribute(s => s.AppUser, new ForeignKeyAttribute(foreignKey: "IdAccount", referenceKey: "AppUserId"));
			config.SetPropertyAttribute(s => s.Playback, new ForeignKeyAttribute(referenceKey: "IdUser", foreignKey: "UserId"));
			AfterConfig(config);
			AfterConfig();
		}
	}
}
