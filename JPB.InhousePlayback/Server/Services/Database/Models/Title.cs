//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:2.0.50727.42
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using JPB.DataAccess.AdoWrapper;
using JPB.DataAccess;
using JPB.DataAccess.ModelsAnotations;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using JPB.DataAccess.DbInfoConfig;
using JPB.DataAccess.EntityCollections;

namespace JPB.InhousePlayback.Server.Services.Database.Models
{


	[GeneratedCodeAttribute(tool: "JPB.DataAccess.EntityCreator.MsSql.MsSqlCreator", version: "2.0.0.0")]
	public partial class Title
	{
		public Title() {}
		public int TitleId  { get; set; }
		public string Name  { get; set; }
		public string Location  { get; set; }
		public Nullable<Int32> OrderNo  { get; set; }
		public Nullable<Int32> PlaybackLength  { get; set; }
		public Nullable<Int32> OffsetStart  { get; set; }
		public Nullable<Int32> OffsetEnd  { get; set; }
		public int IdSeason  { get; set; }
		public virtual Season Season  { get; set; }
		public virtual DbCollection<Playback> Playback  { get; set; }
		public static Title Factory(EagarDataRecord reader)
		{
			var super = new Title();
			super.TitleId = (int)reader["TitleId"];
			super.Name = (string)reader["Name"];
			super.Location = (string)reader["Location"];
			super.OrderNo = (Nullable<Int32>)reader["OrderNo"];
			super.PlaybackLength = (Nullable<Int32>)reader["PlaybackLength"];
			super.OffsetStart = (Nullable<Int32>)reader["OffsetStart"];
			super.OffsetEnd = (Nullable<Int32>)reader["OffsetEnd"];
			super.IdSeason = (int)reader["IdSeason"];
			var readersOfSeason = ((EagarDataRecord[])reader["Season"])?.FirstOrDefault();
			super.Season = readersOfSeason == null ? null : ((Season)(typeof(Season).GetClassInfo().SetPropertiesViaReflection(reader: readersOfSeason)));
			var readersOfPlayback = ((EagarDataRecord[])reader["Playback"]);
			super.Playback = readersOfPlayback == null ? null : new DbCollection<Playback>(readersOfPlayback.Select(item => ((Playback)(typeof(Playback).GetClassInfo().SetPropertiesViaReflection(reader: item)))));
			return super;
		}
		static partial void BeforeConfig();
		static partial void AfterConfig();
		static partial void BeforeConfig(ConfigurationResolver<Title> config);
		static partial void AfterConfig(ConfigurationResolver<Title> config);
		[ConfigMehtodAttribute]
		public static void Configuration(ConfigurationResolver<Title> config)
		{
			BeforeConfig();
			BeforeConfig(config);
			config.SetPropertyAttribute(s => s.TitleId, new PrimaryKeyAttribute());
			config.SetPropertyAttribute(s => s.IdSeason, new ForeignKeyDeclarationAttribute(foreignKey: "SeasonId", foreignTable: typeof(Season)));
			config.SetPropertyAttribute(s => s.Season, new ForeignKeyAttribute(foreignKey: "IdSeason", referenceKey: "SeasonId"));
			config.SetPropertyAttribute(s => s.Playback, new ForeignKeyAttribute(referenceKey: "IdTitle", foreignKey: "TitleId"));
			AfterConfig(config);
			AfterConfig();
		}
	}
}
