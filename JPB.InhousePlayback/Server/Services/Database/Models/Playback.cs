//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:2.0.50727.42
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using JPB.DataAccess.AdoWrapper;
using JPB.DataAccess;
using JPB.DataAccess.ModelsAnotations;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using JPB.DataAccess.DbInfoConfig;
using JPB.DataAccess.EntityCollections;

namespace JPB.InhousePlayback.Server.Services.Database.Models
{


	[GeneratedCodeAttribute(tool: "JPB.DataAccess.EntityCreator.MsSql.MsSqlCreator", version: "2.0.0.0")]
	public partial class Playback
	{
		public Playback() {}
		public int PlaybackId  { get; set; }
		public int IdTitle  { get; set; }
		public int IdUser  { get; set; }
		public int Position  { get; set; }
		public virtual Title Title  { get; set; }
		public virtual Users Users  { get; set; }
		public static Playback Factory(EagarDataRecord reader)
		{
			var super = new Playback();
			super.PlaybackId = (int)reader["PlaybackId"];
			super.IdTitle = (int)reader["IdTitle"];
			super.IdUser = (int)reader["IdUser"];
			super.Position = (int)reader["Position"];
			var readersOfTitle = ((EagarDataRecord[])reader["Title"])?.FirstOrDefault();
			super.Title = readersOfTitle == null ? null : ((Title)(typeof(Title).GetClassInfo().SetPropertiesViaReflection(reader: readersOfTitle)));
			var readersOfUsers = ((EagarDataRecord[])reader["Users"])?.FirstOrDefault();
			super.Users = readersOfUsers == null ? null : ((Users)(typeof(Users).GetClassInfo().SetPropertiesViaReflection(reader: readersOfUsers)));
			return super;
		}
		static partial void BeforeConfig();
		static partial void AfterConfig();
		static partial void BeforeConfig(ConfigurationResolver<Playback> config);
		static partial void AfterConfig(ConfigurationResolver<Playback> config);
		[ConfigMehtodAttribute]
		public static void Configuration(ConfigurationResolver<Playback> config)
		{
			BeforeConfig();
			BeforeConfig(config);
			config.SetPropertyAttribute(s => s.PlaybackId, new PrimaryKeyAttribute());
			config.SetPropertyAttribute(s => s.IdTitle, new ForeignKeyDeclarationAttribute(foreignKey: "TitleId", foreignTable: typeof(Title)));
			config.SetPropertyAttribute(s => s.IdUser, new ForeignKeyDeclarationAttribute(foreignKey: "UserId", foreignTable: typeof(Users)));
			config.SetPropertyAttribute(s => s.Title, new ForeignKeyAttribute(foreignKey: "IdTitle", referenceKey: "TitleId"));
			config.SetPropertyAttribute(s => s.Users, new ForeignKeyAttribute(foreignKey: "IdUser", referenceKey: "UserId"));
			AfterConfig(config);
			AfterConfig();
		}
	}
}
